#!/bin/bash

TMPFOLDER=/tmp/jeedom/${PLUGIN}
if [ -z $PROGRESS_FILENAME ]; then
	PROGRESS_FILENAME=dependance
fi
PROGRESS_FILE=${TMPFOLDER}/${PROGRESS_FILENAME}
HR=$(printf '=%.0s' {1..70})
TAB="echo -n "________""
declare -A fix_handlers
h=0 # no fix_handlers
release=$(lsb_release -sc)

if [ -z $LANG_DEP ]; then
	LANG_DEP=fr
fi

add_fix_handler() {
	fix_handlers[$h,grepOrFunct]=$1
	fix_handlers[$h,msgIfFound]=$2
	fix_handlers[$h,fixStringOrFunct]=$3
	((h++))
}

echo_success() {
	echo -n "[  OK  ]"
	[[ $1 != -*n* ]] && echo
	return 0
}

echo_failure() {
	echo -n "[ERROR]"
	[[ $1 != -*n* ]] && echo
	return 1
}

show_time() {
	num=$1
	min=0
	if((num>59)); then
		((sec=num%60))
		((min=num/60))
	else
		((sec=num))
	fi
	ret="["
	[[ $min -gt 0 ]] && ret+="$min:"
	[[ $min -gt 0 ]] && ret+=$(printf "%02d" $sec)
	[[ $min -lt 1 ]] && ret+="$sec"
	[[ $min -lt 1 ]] && ret+="sec"
	ret+="]"
	[ "$2" != "noEndPoints" ] && ret+=" : "
	echo -n "$ret"
}

# need to find a use for it...
info() {
	$TAB
	local EXIT_CODE=0
	if [ "$1" != "echo" ]; then
		echo "$@"
	else
		$@
		local EXIT_CODE=$?
	fi
	return $EXIT_CODE
}

pre() {
	[[ $TIMED -eq 1 ]] && startFull=`date +%s`
	echo "$HR"
	if [ "$LANG_DEP" = "fr" ]; then
		echo "== $(date +'%d/%m/%Y %H:%M:%S') == Installation des dépendances de $PLUGIN"
	else
		echo "== $(date +'%d/%m/%Y %H:%M:%S') == Dependencies installation for $PLUGIN"
	fi
	echo "$HR"
	echo
	touch $TMPFOLDER/errorLog.$$
	echo 0 > $TMPFOLDER/hasError.$$
	touch $PROGRESS_FILE
	STEP_IN_PROG=0
	NUM_UPDATE=0
	
	# disable temporary deb-multimedia
	if ls /etc/apt/sources.list.d/deb-multimedia.list* &>/dev/null; then
		if [ ! -f "/etc/apt/sources.list.d/deb-multimedia.list.disabledBy${PLUGIN}" ]; then
			if [ -f "/etc/apt/sources.list.d/deb-multimedia.list" ]; then
				sudo mv /etc/apt/sources.list.d/deb-multimedia.list /etc/apt/sources.list.d/deb-multimedia.list.disabledBy${PLUGIN} &>/dev/null
			fi
		fi
	fi
	# remove repo.jeedom.com (validated by Alex)
	if [ -f "/media/boot/multiboot/meson64_odroidc2.dtb.linux" ]; then
		hasRepo=$(grep "repo.jeedom.com" /etc/apt/sources.list | wc -l)
		if [ "$hasRepo" -ne "0" ]; then
			sudo apt-add-repository -r "deb http://repo.jeedom.com/odroid/ stable main" &>/dev/null
		fi
	fi
	# remove repo.distrib.works
	DISTRIB_WORKS=`grep "repo.distrib.works" /etc/apt/sources.list`
	if [[ $? -eq 0 ]]; then
		reAddDistribWorks=1
		sudo sed -i '/repo.distrib.works/d' /etc/apt/sources.list
	else
		reAddDistribWorks=0
	fi
}

step() {
	if [[ $STEP_IN_PROG -eq 1 ]]; then
		STEP=$(($1-1))
		next
	fi
	[[ $TIMED -eq 1 ]] && startStep=`date +%s`
	echo $1 > $PROGRESS_FILE
	STEP_IN_PROG=1
	STEP=$1
	shift
	STEP_NAME=$@
	if [[ $STEP -lt 10 ]]; then
		echo -e "[  $STEP% ] : $STEP_NAME..."
	else
		echo -e "[ $STEP% ] : $STEP_NAME..."
	fi 
	STEP_OK=0
	echo $STEP_OK > $TMPFOLDER/step.$$
}

subStep() {
	# Default values if not defined
	[ -n "${firstSubStep}" ] || firstSubStep=10
	[ -n "${lastSubStep}" ] || lastSubStep=50
	[ -n "${numSubStepMax}" ] || numSubStepMax=9
	
	# Compute pcIncrement only one time if necessary
	if [ -z "${pcIncrement}" ]; then
		pcIncrement=$(( (lastSubStep - firstSubStep) / (numSubStepMax - 1) ))
		if (( pcIncrement < 2 )); then
			if [ "$LANG_DEP" = "fr" ]; then
				echo "Avertissement Développeur: L'incrément de pourcentage par étape (${pcIncrement}%) est inférieur à 2%. Augmentez le range ou diminuez le nombre d'étapes."
			else
				echo "Developer Warning: The percentage increment per step (${pcIncrement}%) is less than 2%. Increase the range or reduce the number of steps"
			fi
			return
		fi
	fi
	
	# Count how many time is called subStep in that sub script
	if [ -z "${subStepCount}" ]; then
		subStepCount=1
	else
		((subStepCount++))
	fi

	# Check if we don't call subStep more than numSubStepMax
	if [ "$subStepCount" -gt "$numSubStepMax" ]; then
		if [ "$LANG_DEP" = "fr" ]; then
			echo "Avertissement Développeur: subStep appelée $subStepCount fois, mais numSubStepMax est défini à $numSubStepMax. Adaptez la valeur de numSubStepMax"
		else
			echo "Developer Warning: subStep has been called $subStepCount times, but you've defined numSubStepMax to $numSubStepMax. Please adapt numSubStepMax"
		fi
		return
	fi
	
	# Init pcInprog, then increment on each call
	if [ -z "${pcInProg}" ]; then
		pcInProg=$firstSubStep
	else
		pcInProg=$((pcInProg + pcIncrement))
		# don't go above lastSubStep
		if [ "$pcInProg" -gt "$lastSubStep" ]; then
			pcInProg=$lastSubStep
		fi
	fi
	
	# Call step with pcInprog and any other arguments sent to subStep
	step "$pcInProg" "$@"
	
	# If the end of the steps is reached, reinit the variables
	if [ "$pcInProg" -ge "$lastSubStep" ]; then
		unset pcInProg
		unset pcIncrement
		unset firstSubStep
		unset lastSubStep
		unset numSubStepMax
		unset subStepCount
	fi
}


try() {
	cmdout="$("$@" 2>&1)"
	local EXIT_CODE=$?
	if [[ $EXIT_CODE -ne 0 ]]; then
		STEP_OK=$EXIT_CODE
		echo $STEP_OK > $TMPFOLDER/step.$$
		echo 1 > $TMPFOLDER/hasError.$$

		local LINE=${BASH_LINENO[0]}
		if [ "$LANG_DEP" = "fr" ]; then
			echo -e "== Erreur à l'étape : $STEP_NAME" >> $TMPFOLDER/errorLog.$$
			echo -e "== Ligne $LINE" >> $TMPFOLDER/errorLog.$$
			echo -e "== La commande \`$*' pose problème" >> $TMPFOLDER/errorLog.$$
			echo -e "== Le code de retour est $EXIT_CODE" >> $TMPFOLDER/errorLog.$$
			echo -e "== Le message d'erreur :" >> $TMPFOLDER/errorLog.$$
		else
			echo -e "== Error in step : $STEP_NAME" >> $TMPFOLDER/errorLog.$$
			echo -e "== Line $LINE" >> $TMPFOLDER/errorLog.$$
			echo -e "== Command \`$*' have an issue" >> $TMPFOLDER/errorLog.$$
			echo -e "== Return code is $EXIT_CODE" >> $TMPFOLDER/errorLog.$$
			echo -e "== Error message :" >> $TMPFOLDER/errorLog.$$
		fi
		echo -e "$cmdout\n" >> $TMPFOLDER/errorLog.$$
		echo -e "$HR" >> $TMPFOLDER/errorLog.$$
	fi
	return $EXIT_CODE
}

tryOrStop() {
	try $@
	local EXIT_CODE=$?
	if [[ $EXIT_CODE -ne 0 ]]; then
		post
		exit $EXIT_CODE
	fi
	return $EXIT_CODE
}

declare -a commented_sources
comment_source() {
	local file=$1
	local src_error=$2
	while IFS= read -r line; do
		commented_sources+=("$file:$line")
		if [ "$LANG_DEP" = "fr" ]; then
			echo "║ Source trouvée dans $file, on la retire temporairement"
		else
			echo "║ Source found in $file, temporary disabling it"
		fi
		sudo sed -i 's|.*'"$src_error"'.*|#&|' "$file"
	done < <(grep "$src_error" "$file")
}

aptUpdate() {
	MAX_UPDATE=3
	[ -n "${NUM_UPDATE}" ] || NUM_UPDATE=0
	NUM_UPDATE=$((NUM_UPDATE + 1))
	aptOut=$(sudo apt-get -o Acquire::ForceIPv4=true update 2>&1)
	local EXIT_CODE=$?

	if [[ $EXIT_CODE -ne 0 ]]; then
		APT_ERROR=$(echo "$aptOut" | grep -P "Err:")
		if [ ! -z "$APT_ERROR" ]; then
			APT_SRC_ERROR=$(echo $APT_ERROR | sed 's/.*http/http/g' | sed 's/ Release//g')
			if ! echo "$APT_SRC_ERROR" | grep -Eq "($release main|$release-updates main)"; then
				if [ "$LANG_DEP" = "fr" ]; then
					echo "╔ Problème détecté sur la source : $APT_SRC_ERROR, correction en cours..."
				else
					echo "╔ Issue detected on the source : $APT_SRC_ERROR, fixing in progress..."
				fi
	
				if grep -q "$APT_SRC_ERROR" "/etc/apt/sources.list"; then
					comment_source "/etc/apt/sources.list" "$APT_SRC_ERROR"
				else
					for file in /etc/apt/sources.list.d/*.list; do
						if grep -q "$APT_SRC_ERROR" "$file"; then
							comment_source "$file" "$APT_SRC_ERROR"
						fi
					done
				fi
				
				if [ "$NUM_UPDATE" -ge "$MAX_UPDATE" ]; then
					if [ "$LANG_DEP" = "fr" ]; then
						echo "╚!!!!!  : Trop d'essais ($NUM_UPDATE/$MAX_UPDATE), on sort avec erreur"
					else
						echo "╚!!!!!  : Too many tries ($NUM_UPDATE/$MAX_UPDATE), exiting with error"
					fi
					post
					exit $EXIT_CODE
				else
					if [ "$LANG_DEP" = "fr" ]; then
						echo "║ Relance de apt-get update..."
					else
						echo "║ Restarting apt-get update..."
					fi
					aptUpdate
					return $?
				fi
			else
				if [ "$LANG_DEP" = "fr" ]; then
					echo "╚!!!!!  : Erreur sur une source principale de la distribution, impossible à corriger"
				else
					echo "╚!!!!!  : Error on a main source of the distribution, cannot fix"
				fi
				post
				exit $EXIT_CODE
			fi
		else
			post
			exit $EXIT_CODE
		fi
	else
		# Restore commented lines if no error anymore
	        for entry in "${commented_sources[@]}"; do
			local file="${entry%%:*}"
			local line="${entry#*:}"
			if [ "$LANG_DEP" = "fr" ]; then
				echo "║ On réactive la source $line"
			else
				echo "║ Re-enabling the source $line"
			fi
			sudo sed -i "s|#\($line\)|\1|" "$file"
	        done

		if [ "$NUM_UPDATE" -ge "2" ]; then
			if [ "$LANG_DEP" = "fr" ]; then
				echo "║ Ouf ! apt-get update a bien fonctionné après $NUM_UPDATE essais !"
				echo "╚ Cette étape s'est bien déroulée ici, mais attention, d'autres plugins peuvent avoir le problème avec cette source !"
			else
				echo "║ Phew ! apt-get update did worked fine after $NUM_UPDATE tries !"
				echo "╚ This step went fine in the end, but be aware that other plugins may have the same issue with that source !"
			fi
			
		fi
	        commented_sources=()
		unset NUM_UPDATE
		return 0
	fi
	return $EXIT_CODE
}

silent() {
	"$@" &>/dev/null
	return $?
}

next() {
	echo $STEP > ${PROGRESS_FILE}
	[[ -f $TMPFOLDER/step.$$ ]] && { STEP_OK=$(< $TMPFOLDER/step.$$); rm -f $TMPFOLDER/step.$$; }
	if [[ $STEP -lt 10 ]]; then
		echo -en "[  $STEP% ] : "
	else
		echo -en "[ $STEP% ] : "
	fi 
	echo -n "$STEP_NAME : "
	[[ $TIMED -eq 1 ]] && show_time $((`date +%s`-$startStep))
	if [[ $STEP_OK -eq 0 ]]; then
		echo_success
	else
		echo_failure
	fi

	STEP_IN_PROG=0
	return $STEP_OK
}

fixNO_PUBKEY() {
	missing_keys=$(grep 'NO_PUBKEY' $TMPFOLDER/errorLog.$$ | sed -n 's/.*NO_PUBKEY \([^ ]*\).*/\1/p')

	for key in $missing_keys; do
		if [ "$LANG_DEP" = "fr" ]; then
			echo "== TROUVÉ 'NO_PUBKEY $key' dans l'erreur, je lance une commande pour corriger (ignorez le warning), attendez 45sec et relancez les dépendances pour réessayer"
		else
			echo "== FOUND 'NO_PUBKEY $key' in error, launching countermeasures (ignore warning), wait 45sec and relaunch dependencies to retry"
		fi
		sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys "$key"
		HAS_FIX=1
	done
}

fix () {
	for (( f=0;f<h;f++ )); do # for each fix handler
		if [ "$(type -t ${fix_handlers[$f,grepOrFunct]})" = "function" ]; then
			${fix_handlers[$f,grepOrFunct]} "$TMPFOLDER/errorLog.$$"
			SEARCH_RESULT=$?
		else
			grep "${fix_handlers[$f,grepOrFunct]}" $TMPFOLDER/errorLog.$$ &>/dev/null
			SEARCH_RESULT=$?
		fi
		if [ "$SEARCH_RESULT" -eq 0 ];then
			if [ "${fix_handlers[$f,msgIfFound]}" = "" ]; then
				if [ "$LANG_DEP" = "fr" ]; then
					echo "== TROUVÉ '${fix_handlers[$f,grepOrFunct]}' dans l'erreur, je lance une commande pour corriger, attendez 45sec et relancez les dépendances pour réessayer"
				else
					echo "== FOUND '${fix_handlers[$f,grepOrFunct]}' in error, launching countermeasures, wait 45sec and relaunch dependencies to retry"
				fi
			else
				if [ "${fix_handlers[$f,msgIfFound]:0:1}" = "*" ]; then
					if [ "$LANG_DEP" = "fr" ]; then
						echo "== TROUVÉ '${fix_handlers[$f,msgIfFound]:1}' dans l'erreur, je lance une commande pour corriger, attendez 45sec et relancez les dépendances pour réessayer"
					else
						echo "== FOUND '${fix_handlers[$f,msgIfFound]:1}' in error, launching countermeasures, wait 45sec and relaunch dependencies to retry"
					fi
				else
					echo ${fix_handlers[$f,msgIfFound]}
				fi
			fi
			if [ -n "${fix_handlers[$f,fixStringOrFunct]}" ]; then
				if [ "$(type -t ${fix_handlers[$f,fixStringOrFunct]})" = "function" ]; then
					${fix_handlers[$f,fixStringOrFunct]}
				else
					eval ${fix_handlers[$f,fixStringOrFunct]}
				fi
			fi
			HAS_FIX=1
		fi
	done

	fixNO_PUBKEY
}

post() {
	# enable deb-multimedia
	if [ -f /etc/apt/sources.list.d/deb-multimedia.list.disabledBy${PLUGIN} ]; then
		sudo mv /etc/apt/sources.list.d/deb-multimedia.list.disabledBy${PLUGIN} /etc/apt/sources.list.d/deb-multimedia.list &>/dev/null
	fi
	if [[ $reAddDistribWorks -eq 1 ]]; then
		sudo echo "$DISTRIB_WORKS" >> /etc/apt/sources.list
	fi
	if [[ ! -z $APT_LINE_ERROR ]]; then
		sudo echo "$APT_LINE_ERROR" >> /etc/apt/sources.list
	fi
	if [[ $STEP_IN_PROG -eq 1 ]]; then
		STEP=99
		next
	fi
	echo 100 > ${PROGRESS_FILE}
	if [ "$LANG_DEP" = "fr" ]; then
		echo "[100% ] : Terminé !"
	else
		echo "[100% ] : Finished !"
	fi
	[[ -f $TMPFOLDER/hasError.$$ ]] && { hasError=$(< $TMPFOLDER/hasError.$$); rm -f $TMPFOLDER/hasError.$$; }
	echo
	if [[ $hasError -eq 1 ]]; then
		echo "$HR"
		if [ "$LANG_DEP" = "fr" ]; then
			echo -n "== KO == Erreur d'Installation "
			[[ $TIMED -eq 1 ]] && show_time $((`date +%s`-$startFull)) "noEndPoints"
		else
			echo -n "== KO == Installation Error "
			[[ $TIMED -eq 1 ]] && show_time $((`date +%s`-$startFull)) "noEndPoints"
		fi
		echo
		echo "$HR"
		[[ -f $TMPFOLDER/errorLog.$$ ]] && {
			HAS_FIX=0
			if [ "$LANG_DEP" = "fr" ]; then
				echo "== ANALYSE DES ERREURS..."
			else
				echo "== ANALYSING ERRORS..."
			fi
			
			#try to fix if possible
			fix

			if [[ $HAS_FIX -eq 0 ]]; then
				#show the error
				if [ "$LANG_DEP" = "fr" ]; then
					echo "== AUCUNE ERREUR CONNUE DÉTECTÉE"
				else
					echo "== NO KNOWN ERROR DETECTED"
				fi
				cat $TMPFOLDER/errorLog.$$;
			fi
			rm -f $TMPFOLDER/errorLog.$$; 
		}
	else
		echo "$HR"
		if [ "$LANG_DEP" = "fr" ]; then
			echo -n "== OK == Installation Réussie "
			[[ $TIMED -eq 1 ]] && show_time $((`date +%s`-$startFull)) "noEndPoints"
		else
			echo -n "== OK == Installation Successful "
			[[ $TIMED -eq 1 ]] && show_time $((`date +%s`-$startFull)) "noEndPoints"
		fi
		echo
		echo "$HR"
	fi
	rm -f ${PROGRESS_FILE}
}

# fix apt broken install
add_fix_handler "apt --fix-broken install" "" "yes | sudo apt --fix-broken install"

# fix dkpg error (probably stopped during apt install)
add_fix_handler "sudo dpkg --configure -a" "*dpkg --configure -a" "sudo dpkg --configure -a --force-confdef"

# if debian have changed the Suite value, allow releaseinfo change in apt-get
add_fix_handler "changed its 'Suite' value from" "*changed its Suite value from" "sudo apt-get -o Acquire::ForceIPv4=true --allow-releaseinfo-change update"
add_fix_handler "a modifié sa valeur « Suite » de" "*a modifié sa valeur suite de" "sudo apt-get -o Acquire::ForceIPv4=true --allow-releaseinfo-change update"


# fix certificate chain issue oph.mdrjr.net
fix_certif_chain_issue_mdrjr() {
	sudo cp /etc/ca-certificates.conf /etc/ca-certificates.conf.orig
	sudo sed -i s%mozilla/DST_Root_CA_X3.crt%!mozilla/DST_Root_CA_X3.crt%g /etc/ca-certificates.conf
	sudo update-ca-certificates
}
add_fix_handler "Certificate verification failed: The certificate is NOT trusted. The certificate chain uses expired certificate.  Could not handshake: Error in the certificate verification. [IP: 216.155.132.189 443]" "*Error in the certificate verification on oph.mdrjr.net" fix_certif_chain_issue_mdrjr

# fix armbian.com not available for buster anymore (same fix than the Atlas plugin does) :
add_fix_handler "The repository 'http://apt.armbian.com buster Release' no longer has a Release file." "" "sudo sed -i 's|^deb http://apt.armbian.com|#deb http://apt.armbian.com|g' /etc/apt/sources.list.d/armbian.list"
add_fix_handler "Le dépôt http://apt.armbian.com buster Release ne contient plus de fichier Release." "" "sudo sed -i 's|^deb http://apt.armbian.com|#deb http://apt.armbian.com|g' /etc/apt/sources.list.d/armbian.list"

# fix buster-backports not available anymore :
fix_buster_backport_not_available() {
	if [ -f /etc/apt/sources.list.d/buster-backports.list ]; then
		sudo sed -i 's|^deb-src http://[a-zA-Z0-9.-]\+\.debian\.org/debian buster-backports|deb-src http://archive.debian.org/debian buster-backports|g' /etc/apt/sources.list.d/buster-backports.list
		sudo sed -i 's|^deb http://[a-zA-Z0-9.-]\+\.debian\.org/debian buster-backports|deb http://archive.debian.org/debian buster-backports|g' /etc/apt/sources.list.d/buster-backports.list
	else
		sudo sed -i 's|^deb-src http://[a-zA-Z0-9.-]\+\.debian\.org/debian buster-backports|deb-src http://archive.debian.org/debian buster-backports|g' /etc/apt/sources.list
		sudo sed -i 's|^deb http://[a-zA-Z0-9.-]\+\.debian\.org/debian buster-backports|deb http://archive.debian.org/debian buster-backports|g' /etc/apt/sources.list
	fi
}
add_fix_handler "The repository 'http://[[:alnum:].-]\+\.debian\.org/debian buster-backports Release' no longer has a Release file." "" fix_buster_backport_not_available
add_fix_handler "Le dépôt http://[[:alnum:].-]\+\.debian\.org/debian buster-backports Release ne contient plus de fichier Release." "" fix_buster_backport_not_available
