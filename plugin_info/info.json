{
    "id": "jMQTT",
    "name": "jMQTT",
    "description": {
        "fr_FR": "Ce plugin permet d'interfacer Jeedom à un ou plusieurs serveurs MQTT (appelé Broker), afin de recevoir des messages et de publier ses propres messages. Il est capable de décoder des payload JSON complexe et créer les commandes info associées, de découvrir automatiquement de nouveaux équipements ou d'en créer manuellement. Un gestionnaire de templates permet un démarrage rapide.",
        "en_US": "This plugin allows you to interface Jeedom to one or more MQTT servers (called Broker), in order to receive messages and publish your own messages. It is able to decode complex JSON payloads and create the associated info commands, automatically discover new equipment or create it manually. A template manager helps you getting started."
    },
    "utilization": "Installation du Broker Mosquitto ; Prise en charge de plusieurs Broker ; Création automatique des équipements MQTT, création automatique des commandes d'information, options pour désactiver ces automatismes ; Ajout manuel d'équipement MQTT ; Duplication d'équipements ; Décodage de payload JSON complexe et création de commandes d'informations associées ; Affichage en vue Classique Jeedom ou en vue JSON ; Ajout manuel de commandes (pour la publication), prise en charge du mode Retain ; Gestionnaire de templates ; Emulation et remontée du niveau de batterie d'un équipement dans Jeedom ; Emulation et remontée de la disponibilité et mise en alarme de l'équipement dans Jeedom ; et encore beaucoup d'autres...",
    "utilization_en_US": "Mosquitto Broker installation ; Multiple Broker support ; Automatic MQTT devices creation, automatic information commands creation, options to disable these automatisms ; Add MQTT equipment manually ; Equipment duplication ; Complex JSON payload decoding and creation of associated information commands ; Display in Jeedom Classic view or JSON view ;  Added manual commands (for publishing), Retain mode support ; Template manager ; Emulation and raising the battery level of equipment in Jeedom ; Emulation and feedback of equipment availability and alarming in Jeedom ; and many more...",
    "licence": "AGPL",
    "author": "Bad",
    "require": "4.2.11",
    "category": "automation protocol",
    "hasDependency": true,
    "hasOwnDeamon": true,
    "issue": "https://github.com/BadWolf42/jMQTT/issues",
    "changelog": "https://docs.bad.wf/#language#/jmqtt/changelog",
    "changelog_beta": "https://docs.bad.wf/#language#/jmqtt/changelog",
    "documentation": "https://docs.bad.wf/#language#/jmqtt/stable/index",
    "documentation_beta": "https://docs.bad.wf/#language#/jmqtt/beta/index",
    "link": {
        "community": "https://community.jeedom.com/tag/plugin-jmqtt",
        "forum": "https://community.jeedom.com/tag/plugin-jmqtt",
        "github": "https://github.com/BadWolf42/jMQTT"
    },
    "languages": ["fr_FR","en_US"],
    "compatibility": ["atlas","diy","docker","luna","miniplus","rpi","smart","v4"],
    "pluginVersion" : "23.11.6"
}
