{
	"id": "jMQTT",
	"name": "jMQTT",
	"description": {
		"fr_FR": "Ce plugin permet d'interfacer Jeedom à un ou plusieurs serveurs MQTT (appelé Broker), afin de recevoir des messages et de publier ses propres messages.<br />Il est capable de décoder des payload JSON complexe et créer les commandes info associées, de découvrir automatiquement de nouveaux équipements ou d'en créer manuellement.<br />Un gestionnaire de templates permet de démarrer plus rapidement.",
		"en_US": "This plugin allows you to interface Jeedom to one or more MQTT servers (called Broker), in order to receive messages and publish your own messages.<br />It is able to decode complex JSON payloads and create the associated info commands, automatically discover new equipment or create it manually.<br />A template manager helps you get started faster."
	},
	"utilization": "- Installation automatique du Broker Mosquitto ;<br />- Prise en charge de plusieurs Broker ;<br />- Création automatique des équipements MQTT, création automatique des commandes d'information, options pour désactiver ces automatismes ;<br />- Ajout manuel d'équipement MQTT ;<br />- Duplication d'équipements ;<br />- Décodage de payload JSON complexe et création de commandes d'informations associées ;<br />- Affichage en vue Classique Jeedom ou en vue JSON ;<br />- Ajout manuel de commandes (pour la publication), prise en charge du mode Retain ;<br />- Gestionnaire de templates ;<br />- Emulation et remontée du niveau de batterie d'un équipement dans Jeedom ;<br />- Emulation et remontée de la disponibilité et mise en alarme de l'équipement dans Jeedom ;<br />et encore beaucoup d'autres...",
	"utilization_en_US": "- Automatic Broker Mosquitto installation;<br />- Multiple Broker support;<br />- Automatic creation of MQTT devices, automatic creation of information commands, options to disable these automatisms;<br />- Added MQTT equipment manual;<br />- Equipment duplication;<br />- Complex JSON payload decoding and creation of associated information commands;<br />- Display in Jeedom Classic view or JSON view; <br />- Added manual commands (for publishing), Retain mode support;<br />- Template manager;<br />- Emulation and raising the battery level of equipment in Jeedom; <br />- Emulation and feedback of equipment availability and alarming in Jeedom;<br />and many more...",
	"licence": "AGPL",
	"author": "Domochip",
	"require": "4.2.16",
	"category": "automation protocol",
	"hasDependency": true,
	"hasOwnDeamon": true,
	"issue": "https://github.com/Domochip/jMQTT/issues",
	"changelog": "https://domochip.github.io/jMQTT/fr_FR/changelog",
	"documentation": "https://domochip.github.io/jMQTT/fr_FR/",
	"changelog_beta": "https://domochip.github.io/jMQTT/fr_FR/changelog",
	"documentation_beta": "https://domochip.github.io/jMQTT/fr_FR/",
	"link": {
		"forum": "https://community.jeedom.com/tag/plugin-jmqtt"
	},
	"languages": ["fr_FR","en_US","sp_SP"],
	"compatibility": ["miniplus","smart","atlas","rpi","docker","diy","v4"]
}
